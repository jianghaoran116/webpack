!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.root=t():e.root=t()}(window,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);var n={};r.r(n),r.d(n,"BinarySearchTree",function(){return f});var i={};r.r(i),r.d(i,"DoublyLinkedList",function(){return y});var s={};r.r(s),r.d(s,"HashLinearProbing",function(){return x});var l={};r.r(l),r.d(l,"LinkedList",function(){return k});var o={};r.r(o),r.d(o,"PriorityQueue",function(){return N});var h={};r.r(h),r.d(h,"Queue",function(){return O});var u={};r.r(u),r.d(u,"default",function(){return w});var a={};r.r(a),r.d(a,"Stack",function(){return z});class d{constructor(e){this.key=e,this.left=null,this.right=null}}class f{constructor(){this.root=null}insert(e){var t=new d(e);null===this.root?this.root=t:this.insertNode(root,t)}insertNode(e,t){t.key<e.key?null===e.left?e.left=t:this.insertNode(e.left,t):null===e.right?e.right=t:this.insertNode(e.right,t)}getRoot(){return this.root}search(e){return this.searchNode(this.root,e)}searchNode(e,t){return null!==e&&(t<e.key?this.searchNode(e.left,t):!(t>e.key)||this.searchNode(e.right,t))}inOrderTraverse(e){this.inOrderTraverseNode(root,e)}inOrderTraverseNode(e,t){null!==e&&(this.inOrderTraverseNode(e.left,t),t(e.key),this.inOrderTraverseNode(e.right,t))}preOrderTraverse(e){this.preOrderTraverseNode(root,e)}preOrderTraverseNode(e,t){null!==e&&(t(e.key),this.preOrderTraverseNode(e.left,t),this.preOrderTraverseNode(e.right,t))}postOrderTraverse(e){this.postOrderTraverseNode(root,e)}postOrderTraverseNode(e,t){null!==e&&(this.postOrderTraverseNode(e.left,t),this.postOrderTraverseNode(e.right,t),t(e.key))}min(){return this.minNode(root)}minNode(e){if(e){for(;e&&null!==e.left;)e=e.left;return e.key}return null}max(){return this.maxNode(root)}maxNode(e){if(e){for(;e&&null!==e.right;)e=e.right;return e.key}return null}remove(e){this.root=this.removeNode(this.root,e)}findMinNode(e){for(;e&&null!==e.left;)e=e.left;return e}removeNode(e,t){if(null===e)return null;if(t<e.key)return e.left=this.removeNode(e.left,t),e;if(t>e.key)return e.right=this.removeNode(e.right,t),e;if(null===e.left&&null===e.right)return e=null;if(null===e.left)return e=e.right;if(null===e.right)return e=e.left;var r=this.findMinNode(e.right);return e.key=r.key,e.right=this.removeNode(e.right,r.key),e}}class g{constructor(e){this.element=e,this.next=null,this.prev=null}}const c=new WeakMap,v=new WeakMap,p=new WeakMap;class y{constructor(){c.set(this,0),v.set(this,null),p.set(this,null)}append(e){let t,r=new g(e);null===this.getHead()?(v.set(this,r),p.set(this,r)):((t=this.getTail()).next=r,r.prev=t,p.set(this,r));let n=this.size();n++,c.set(this,n)}insert(e,t){if(e>=0&&e<=this.size()){let r,n=new g(t),i=this.getHead(),s=0;if(0===e)this.getHead()?(n.next=i,i.prev=n,v.set(this,n)):(v.set(this,n),p.set(this,n));else if(e===this.size())(i=p).next=n,n.prev=i,p.set(this,n);else{for(;s++<e;)r=i,i=i.next;n.next=i,r.next=n,i.prev=n,n.prev=r}let l=this.size();return l++,c.set(this,l),!0}return!1}removeAt(e){if(e>-1&&e<this.size()){let t,r=this.getHead(),n=this.getTail(),i=r,s=0;if(0===e)r=i.next,1===this.size()?n=null:r.prev=null;else if(e===this.size()-1)(n=(i=n).prev).next=null;else{for(;s++<e;)t=i,i=i.next;t.next=i.next,i.next.prev=t}v.set(this,r),p.set(this,n);let l=this.size();return l--,c.set(this,l),i.element}return null}remove(e){let t=this.indexOf(e);return this.removeAt(t)}indexOf(e){let t=this.getHead(),r=-1;if(e==t.element)return 0;for(r++;t.next;){if(e==t.element)return r;t=t.next,r++}return e==t.element?r:-1}isEmpty(){return 0===this.size()}size(){return c.get(this)}toString(){let e=this.getHead(),t=e?e.element:"";for(;e&&e.next;)t+=", "+(e=e.next).element;return t}inverseToString(){let e=this.getTail(),t=e?e.element:"";for(;e&&e.prev;)t+=", "+(e=e.prev).element;return t}print(){console.log(this.toString())}printInverse(){console.log(this.inverseToString())}getHead(){return v.get(this)}getTail(){return p.get(this)}}class m{constructor(e,t){this.key=e,this.value=t}toString(){return"["+this.key+" - "+this.value+"]"}}class x{constructor(){this.table=[]}loseloseHashCode(e){for(var t=0,r=0;r<e.length;r++)t+=e.charCodeAt(r);return t%37}hashCode(e){return this.loseloseHashCode(e)}put(e,t){var r=this.hashCode(e);if(console.log(r+" - "+e),null==this.table[r])this.table[r]=new m(e,t);else{for(var n=++r;null!=this.table[n];)n++;this.table[n]=new m(e,t)}}get(e){var t=this.hashCode(e);if(void 0!==this.table[t]){if(this.table[t].key===e)return this.table[t].value;for(var r=++t;void 0===this.table[r]||this.table[r].key!==e;)r++;if(this.table[r].key===e)return this.table[r].value}}remove(e){var t=this.hashCode(e);if(void 0!==this.table[t])if(this.table[t].key===e)this.table[t]=void 0;else{for(var r=++t;void 0===this.table[r]||this.table[r].key!==e;)r++;this.table[r].key===e&&(this.table[r]=void 0)}}print(){for(var e=0;e<this.table.length;++e)void 0!==this.table[e]&&console.log(e+" -> "+this.table[e].toString())}}class b{constructor(e){this.element=e,this.next=null}}class k{constructor(){this.length=0,this.head=null}append(e){let t,r=new b(e);if(null===this.head)this.head=r;else{for(t=this.head;t.next;)t=t.next;t.next=r}this.length++}insert(e,t){if(e>=0&&e<=this.length){let r,n=new b(t),i=this.head,s=0;if(0===e)n.next=i,this.head=n;else{for(;s++<e;)r=i,i=i.next;n.next=i,r.next=n}return this.length++,!0}return!1}removeAt(e){if(e>-1&&e<this.length){let t,r=this.head,n=0;if(0===e)this.head=r.next;else{for(;n++<e;)t=r,r=r.next;t.next=r.next}return this.length--,r.element}return null}remove(e){let t=this.indexOf(e);return this.removeAt(t)}indexOf(e){let t=this.head,r=0;for(;t;){if(e===t.element)return r;r++,t=t.next}return-1}isEmpty(){return 0===this.length}size(){return this.length}getHead(){return this.head}toString(){let e=this.head,t="";for(;e;)t+=e.element+(e.next?"n":""),e=e.next;return t}}let N=function(){const e=new WeakMap;class t{constructor(e,t){this.element=e,this.priority=t}}return class{constructor(){e.set(this,[])}enqueue(r,n){let i=e.get(this),s=new t(r,n),l=!1;for(let e=0;e<i.length;e++)if(s.priority<i[e].priority){i.splice(e,0,s),l=!0;break}l||i.push(s)}dequeue(){return e.get(this).shift()}front(){return e.get(this)[0]}isEmpty(){return 0==e.get(this).length}size(){return e.get(this).length}print(){let t=e.get(this);for(let e=0;e<t.length;e++)console.log(`${t[e].element} - ${t[e].priority}`)}}}(),O=function(){const e=new WeakMap;return class{constructor(){e.set(this,[])}enqueue(t){e.get(this).push(t)}dequeue(){return e.get(this).shift()}front(){return e.get(this)[0]}isEmpty(){return 0==e.get(this).length}size(){return e.get(this).length}print(){let t=e.get(this);console.log(t.toString())}}}();const T=new WeakMap;class w{constructor(){T.set(this,{})}add(e){if(!this.has(e)){return T.get(this)[e]=e,!0}return!1}delete(e){if(this.has(e)){return delete T.get(this)[e],!0}return!1}has(e){return T.get(this).hasOwnProperty(e)}clear(){T.set(this,{})}size(){let e=T.get(this);return Object.keys(e).length}values(){let e=[],t=T.get(this);for(let r=0,n=Object.keys(t);r<n.length;r++)e.push(t[n[r]]);return e}getItems(){return T.get(this)}union(e){let t=new w,r=this.values();for(let e=0;e<r.length;e++)t.add(r[e]);r=e.values();for(let e=0;e<r.length;e++)t.add(r[e]);return t}intersection(e){let t=new w,r=this.values();for(let n=0;n<r.length;n++)e.has(r[n])&&t.add(r[n]);return t}difference(e){let t=new w,r=this.values();for(let n=0;n<r.length;n++)e.has(r[n])||t.add(r[n]);return t}subset(e){if(this.size()>e.size())return!1;{let t=this.values();for(let r=0;r<t.length;r++)if(!e.has(t[r]))return!1;return!0}}}const S=new WeakMap;class z{constructor(){S.set(this,[])}push(e){S.get(this).push(e)}pop(){return S.get(this).pop()}peek(){let e=S.get(this);return e[e.length-1]}isEmpty(){return 0==S.get(this).length}clear(){let e=S.get(this);e=[]}print(){let e=S.get(this);console.log(e.toString())}}t.default={BinarySearchTree:n,DoublyLinkedList:i,HashLinearProbing:s,LinkedList:l,PriorityQueue:o,Queue:h,Set:u,Stack:a}}])});